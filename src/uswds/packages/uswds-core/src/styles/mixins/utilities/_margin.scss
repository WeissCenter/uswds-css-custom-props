@use "sass:list";
@use "../../functions" as *;
@use "../../css-vars/utilities/functions" as *;

// Adds margin either l/r(x) or t/b(y)

@mixin margin-n($side, $value...) {
  $value: unpack($value);
  // @debug "Passed in padding var: "+$value;

  // Check to see if the value it a token or a string
  // If token, then we need to add 'usa-spacing' prefix, otherwise pass it straight in
  // Best way i can think to do that right now is to check and see if the value contains the word 'margin', if not it's a pre-established USWDS var
  $value: #{$value};
  @if not str-index($value, "margin") {
    $value: "spacing-" + strip-period($value);
  }
  @if $side == all {
    $important: null;
    @if has-important($value) {
      $value: remove($value, "!important");
      @if list.length($value) == 1 {
        $value: de-list($value);
      }
      $important: " !important";
    }
    // margin: get-uswds-value(margin, $value...) #{$important};
    margin: cssVar($value);
  } @else if $side == x {
    $important: null;
    @if has-important($value) {
      $value: remove($value, "!important");
      @if list.length($value) == 1 {
        $value: de-list($value);
      }
      $important: " !important";
    }
    // margin-left: get-uswds-value("margin-horizontal", $value...) #{$important};
    // margin-right: get-uswds-value("margin-horizontal", $value...) #{$important};
    margin-left: cssVar($value);
    margin-right: cssVar($value);
  } @else if $side == y {
    $important: null;
    @if has-important($value) {
      $value: remove($value, "!important");
      @if list.length($value) == 1 {
        $value: de-list($value);
      }
      $important: " !important";
    }
    // margin-bottom: get-uswds-value("margin-vertical", $value...) #{$important};
    // margin-top: get-uswds-value("margin-vertical", $value...) #{$important};
    margin-bottom: cssVar($value);
    margin-top: cssVar($value);
  } @else if $side == t {
    $important: null;
    @if has-important($value) {
      $value: remove($value, "!important");
      @if list.length($value) == 1 {
        $value: de-list($value);
      }
      $important: " !important";
    }
    // margin-top: get-uswds-value("margin-vertical", $value...) #{$important};
    margin-top: cssVar($value);
  } @else if $side == r {
    $important: null;
    @if has-important($value) {
      $value: remove($value, "!important");
      @if list.length($value) == 1 {
        $value: de-list($value);
      }
      $important: " !important";
    }
    // margin-right: get-uswds-value("margin-horizontal", $value...) #{$important};
    margin-right: cssVar($value);
  } @else if $side == b {
    $important: null;
    @if has-important($value) {
      $value: remove($value, "!important");
      @if list.length($value) == 1 {
        $value: de-list($value);
      }
      $important: " !important";
    }
    // margin-bottom: get-uswds-value("margin-vertical", $value...) #{$important};
    margin-bottom: cssVar($value);
  } @else if $side == l {
    $important: null;
    @if has-important($value) {
      $value: remove($value, "!important");
      @if list.length($value) == 1 {
        $value: de-list($value);
      }
      $important: " !important";
    }
    // margin-left: get-uswds-value("margin-horizontal", $value...) #{$important};
    margin-left: cssVar($value);
  }
}

@mixin u-margin($value...) {
  @include margin-n(all, $value...);
}

@mixin u-margin-x($value...) {
  @include margin-n(x, $value...);
}

@mixin u-margin-y($value...) {
  @include margin-n(y, $value...);
}

@mixin u-margin-top($value...) {
  @include margin-n(t, $value...);
}

@mixin u-margin-right($value...) {
  @include margin-n(r, $value...);
}

@mixin u-margin-bottom($value...) {
  @include margin-n(b, $value...);
}

@mixin u-margin-left($value...) {
  @include margin-n(l, $value...);
}
