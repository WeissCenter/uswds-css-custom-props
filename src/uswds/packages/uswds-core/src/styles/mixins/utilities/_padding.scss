@use "sass:list";
@use "../../functions"as *;
@use "../../css-vars/utilities/functions"as *;

// Adds padding either l/r(x) or t/b(y)

@mixin padding-n($side, $value...) {
  // $value: unpack($value);
  $important: null;

  @if has-important($value) {
    $value: remove($value, "!important");

    @if list.length($value)==1 {
      $value: de-list($value);
    }

    $important: " !important";
  }

  $value: #{$value};
  // @debug "Passed in padding var: "+$value;

    // Check to see if the value it a token or a string
  // If token, then we need to add 'usa-spacing' prefix, otherwise pass it straight in
  // Best way i can think to do that right now is to check and see if the value contains the word 'padding', if not it's a pre-established USWDS var
  $value: #{$value};
  @if not str-index($value, "padding") {
    $value: "spacing-" + strip-period($value);
  }
  @if $side==all {
    // padding: get-uswds-value("padding", $value...) #{$important};
    padding: cssVar($value);
  }

  @else if $side==x {
    // padding-left: get-uswds-value("padding", $value...) #{$important};
    // padding-right: get-uswds-value("padding", $value...) #{$important};
    padding-left: cssVar($value);
    padding-right: cssVar($value);
  }

  @else if $side==y {
    // padding-bottom: get-uswds-value("padding", $value...) #{$important};
    // padding-top: get-uswds-value("padding", $value...) #{$important};
    padding-bottom: cssVar($value);
    padding-top: cssVar($value);
  }

  @else {
    // padding-#{$side}: get-uswds-value("padding", $value...) #{$important};
    padding-#{$side}: cssVar($value);
  }
}

@mixin u-padding($value...) {
  @include padding-n(all, $value...);
}

@mixin u-padding-x($value...) {
  @include padding-n(x, $value...);
}

@mixin u-padding-y($value...) {
  @include padding-n(y, $value...);
}

@mixin u-padding-top($value...) {
  @include padding-n(top, $value...);
}

@mixin u-padding-right($value...) {
  @include padding-n(right, $value...);
}

@mixin u-padding-bottom($value...) {
  @include padding-n(bottom, $value...);
}

@mixin u-padding-left($value...) {
  @include padding-n(left, $value...);
}